service: () -> {
    addLocker: (record {number:text}) -> (variant {Ok:record {id:principal; availability:bool; number:text; renterId:opt principal}; Err:text});
    createUser: (record {name:text}) -> (variant {Ok:record {id:principal; name:text; createdAt:nat64}; Err:text});
    evictLocker: (principal) -> (variant {Ok:bool; Err:text});
    getLockerById: (principal) -> (variant {Ok:record {id:principal; availability:bool; number:text; renterId:opt principal}; Err:text}) query;
    getLockers: () -> (vec record {id:principal; availability:bool; number:text; renterId:opt principal}) query;
    getRenterById: (principal) -> (variant {Ok:record {id:principal; duration:nat64; userRenterId:principal; lockerId:principal}; Err:text}) query;
    getRenters: () -> (vec record {id:principal; duration:nat64; userRenterId:principal; lockerId:principal}) query;
    getUserById: (principal) -> (variant {Ok:record {id:principal; name:text; createdAt:nat64}; Err:text}) query;
    getUsers: () -> (vec record {id:principal; name:text; createdAt:nat64}) query;
    rentLocker: (principal, record {duration:nat64; lockerId:principal}) -> (variant {Ok:record {id:principal; duration:nat64; userRenterId:principal; lockerId:principal}; Err:text});
}
